# EMPTY is a meta symbol to mean an empty string.

parse:
    translation_unit EOF								Predict : {'int'}

translation_unit:
    external_declaration translation_unit_external_declaration				Predict : {'int'}

translation_unit_external_declaration:
    external_declaration translation_unit_external_declaration				Predict : {'int'}
    EMPTY										Predict : {EOF}

external_declaration:
    function_definition									Predict : {'int'}

function_definition:
    int identifier ( parameter_type_list_opt ) compound_statement			Predict : {'int'}

parameter_type_list_opt:
    parameter_type_list									Predict : {'int'}
    EMPTY										Predict : {')'}

parameter_type_list:
    parameter_type parameter_type_list_parameter_type					Predict : {'int'}

parameter_type_list_parameter_type:
    , parameter_type parameter_type_list_parameter_type					Predict : {','}
    EMPTY										Predict : {')'}

parameter_type:
    int identifier									Predict : {'int'}

compound_statement:
    { declaration_list_opt statement_list_opt }						Predict : {'{'}

declaration_list_opt:
    declaration_list_opt_declaration							Predict : {'int'}

declaration_list_opt_declaration
    declaration declaration_list_opt_declaration					Predict : {'int'}
    EMPTY										Predict : {'while', 'if', identifier, integer_constant, '(', 'return', '{'}

statement_list_opt:
    statement_list_opt_statement							Predict : {'while', 'if', identifier, integer_constant, '(', 'return', '{', '}'}

statement_list_opt_statement
    statement statement_list_opt_statement						Predict : {'while', 'if', identifier, integer_constant, '(', 'return', '{'}
    EMPTY										Predict : {'}'}

declaration:
    int identifier ;									Predict : {'int'}

statement:
    iteration_statement									Predict : {'while'}
    selection_statement									Predict : {'if'}
    expression_statement								Predict : {identifier, ';'}
    jump_statement									Predict : {'return'}
    compound_statement									Predict : {'{'}

iteration_statement:
    while ( expression ) statement							Predict : {'while'}

selection_statement:
    if ( expression ) statement else_selection_statement 				Predict : {'if'}

else_selection_statement:
    else statement									Predict : {'else'}
    EMPTY										Predict : {'}'}

expression_statement:
    identifier = expression ;								Predict : {identifier}
    ;											Predict : {';'}

jump_statement:
    return expression_jump_statement							Predict : {'return'}

expression_jump_statement:
    expression ;									Predict : {identifier, integer_constant, '('}
    ;											Predict : {';'}

expression:
    equality_expression									Predict : {identifier, integer_constant, '('}

equality_expression:
    relational_expression equality_expression_relational_expression			Predict : {identifier, integer_constant, '('}

equaltiy_expression_relational_expression
    == relational_expression equality_expression_relational_expression			Predict : {'=='}
    != relational_expression equality_expression_relational_expression			Predict : {'!='}
    EMPTY										Predict : {';', ')', ','}

relational_expression:
    additive_expression relational_expression_additive_expression			Predict : {identifier, integer_constant, '('}

relational_expression_additive_expression:
    < additive_expression relational_expression_additive_expression			Predict : {'<'}
    > additive_expression relational_expression_additive_expression			Predict : {'>'}
    <= additive_expression relational_expression_additive_expression			Predict : {'<='}
    >= additive_expression relational_expression_additive_expression			Predict : {'>='}
    EMPTY										Predict : {'==', '!=', ';', ')', ','}

additive_expression:
    multiplicative_expression additive_expression_multiplicative_expression		Predict : {identifier, integer_constant, '('}

additive_expression_multiplicative_expression:
    + multiplicative_expression additive_expression_multiplicative_expression		Predict : {'+'}
    - multiplicative_expression additive_expression_multiplicative_expression		Predict : {'-'}
    EMPTY										Predict : {'<', '>', '<=', '>=', '==', '!=', ';', ')', ','}

multiplicative_expression:
    primary_expression multiplicative_expression_primary_expression			Predict : {identifier, integer_constant, '('}


multiplicative_expression_primary_expression:
    * primary_expression multiplicative_expression_primary_expression			Predict : {'*'}
    / primary_expression multiplicative_expression_primary_expression			Predict : {'/'}
    % primary_expression multiplicative_expression_primary_expression			Predict : {'%'}
    EMPTY										Predict : {'+', '-', '<', '>', '<=', '>=', '==', '!=', ';', ')', ','}

primary_expression:
    identifier argument_expression_list_opt_primary_expression				Predict : {identifier}
    integer_constant									Predict : {integer_constant}
    ( expression )									Predict : {'('}

argument_expression_list_opt_primary_expression:
    ( argument_expression_list_opt )							Predict : {'('}
    EMPTY										Predict : {'*', '/', '%', '+' ,'-', '<', '>', '<=', '>=', '==', '!=', ';', ')', ','}

argument_expression_list_opt:
    argument_expression_list								Predict : {identifier, integer_constant, '('}
    EMPTY										Predict : {')'}

argument_expression_list:
    expression argument_expression_list_expression					Predict : {identifier, integer_constant, '('}

argument_expression_list_expression
    , expression argument_expression_list_expression					Predict : {','}
    EMPTY										Predict : {')'}
